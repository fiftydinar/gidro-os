#!/usr/bin/env bash

# Global initramfs variables - Needed initramfs file arguments contain tracked file arguments dictated by the module & by the live-user
tracked_file="/usr/share/bluebuild/initramfs-setup/tracked"
custom_tracked_file="/etc/bluebuild/initramfs-setup/tracked"
rebuild_file="/etc/bluebuild/initramfs-setup/rebuild"
readarray -t current < <(rpm-ostree initramfs-etc | tr -d ' ' | tail -n +2)
readarray -t needed < <(cat "$tracked_file" "$custom_tracked_file" 2>/dev/null | grep -v -E '^#|^$' | awk '!seen[$0]++')

applies_tracking=false
applies_untracking=false
applies_rebuilding=false

# Print current initramfs file arguments
printf "Current initramfs:\n"
for current_file in "${current[@]}"; do
    printf "%s\n" "$current_file"
done

# If current initramfs is missing needed file arguments, make them ready for tracking
for needed_arg in "${needed[@]}"; do
  found=false
  for current_arg in "${current[@]}"; do
    if [[ "$current_arg" == "$needed_arg" || "${#current[@]}" -gt "${#needed[@]}" ]]; then
      found=true
      break
    fi
  done
  # If "needed initramfs" has more array elements than "current initramfs", prepare for tracking
  if ! $found; then
    applies_tracking=true
  fi
done

# If there are file arguments in current initramfs, that are not present in needed initramfs, make them ready for untracking
for current_arg in "${current[@]}"; do
  found=false
  for needed_arg in "${needed[@]}"; do
    if [[ "$needed_arg" == "$current_arg" || "${#needed[@]}" -gt "${#current[@]}" ]]; then
      found=true
      break
    fi
  done
  # If "current initramfs" has more array elements than "needed initramfs", prepare for untracking
  if ! $found; then
    applies_untracking=true
    untracked+=("$current_arg")
  fi
done

# If "rebuild" file exists, prepare for initramfs rebuild
if [ -f "$rebuild_file" ]; then
  applies_rebuilding=true
fi  

# Apply --track= & --untrack= prefixes to tracked & untracked file arguments
tracked_args=("${needed[@]/#/--track=}")
untracked_args=("${untracked[@]/#/--untrack=}")

# Track & untrack file arguments based on given data + ready conditions, display boot screen message & reboot. Also detects if initramfs rebuilding is enabled.
if $applies_tracking || $applies_untracking || $applies_rebuilding; then

# Tracked initramfs
  if $applies_tracking && ! $applies_untracking && ! $applies_rebuilding; then
    printf "Found needed tracking initramfs changes, applying the following: %s\n" "${needed[*]}"
    plymouth display-message --text="Updating initramfs - System will reboot" || true
    rpm-ostree initramfs --disable
    rpm-ostree initramfs-etc "${tracked_args[@]}" --reboot

# Untracked initramfs
  elif ! $applies_tracking && $applies_untracking && ! $applies_rebuilding; then
    printf "Found needed removal of non-active tracked files, removing the following: %s\n" "${untracked[*]}"
    plymouth display-message --text="Updating initramfs - System will reboot" || true
    rpm-ostree initramfs --disable
    rpm-ostree initramfs-etc "${untracked_args[@]}" --reboot

# Tracked & untracked initramfs
  elif $applies_tracking && $applies_untracking && ! $applies_rebuilding; then
    printf "Found needed tracking initramfs changes, applying the following: %s\n" "${needed[*]}"
    printf "Also applying needed removal of non-active tracked files: %s\n" "${untracked[*]}"
    plymouth display-message --text="Updating initramfs - System will reboot" || true
    rpm-ostree initramfs --disable
    rpm-ostree initramfs-etc "${tracked_args[@]}" "${untracked_args[@]}" --reboot

# Rebuild initramfs
  elif ! $applies_tracking && ! $applies_untracking && $applies_rebuilding; then
    echo "Initramfs rebuilding is enabled, proceeding"
    rm -f "$rebuild_file"
    plymouth display-message --text="Rebuilding initramfs - System will reboot" || true
    rpm-ostree initramfs --disable
    rpm-ostree initramfs-etc --force-sync --reboot

# Tracked + rebuild initramfs
  elif $applies_tracking && ! $applies_untracking && $applies_rebuilding; then
    printf "Found needed tracking initramfs changes, applying the following: %s\n" "${needed[*]}"
    echo "Initramfs rebuilding is enabled, proceeding"
    rm -f "$rebuild_file"    
    plymouth display-message --text="Updating & rebuilding initramfs - System will reboot" || true
    rpm-ostree initramfs --disable
    rpm-ostree initramfs-etc "${tracked_args[@]}" --force-sync --reboot

# Untracked + rebuild initramfs
  elif ! $applies_tracking && $applies_untracking && $applies_rebuilding; then
    printf "Found needed removal of non-active tracked files, removing the following: %s\n" "${untracked[*]}"
    echo "Initramfs rebuilding is enabled, proceeding"
    rm -f "$rebuild_file"    
    plymouth display-message --text="Updating & rebuilding initramfs - System will reboot" || true
    rpm-ostree initramfs --disable
    rpm-ostree initramfs-etc "${untracked_args[@]}" --force-sync --reboot

# Tracked & untracked + rebuild initramfs
  elif $applies_tracking && $applies_untracking && $applies_rebuilding; then
    printf "Found needed tracking initramfs changes, applying the following: %s\n" "${needed[*]}"
    printf "Also applying needed removal of non-active tracked files: %s\n" "${untracked[*]}"
    echo "Initramfs rebuilding is enabled, proceeding"
    rm -f "$rebuild_file"    
    plymouth display-message --text="Updating & rebuilding initramfs - System will reboot" || true
    rpm-ostree initramfs --disable
    rpm-ostree initramfs-etc "${tracked_args[@]}" "${untracked_args[@]}" --force-sync --reboot
  fi

else
  echo "No initramfs changes detected"
fi
