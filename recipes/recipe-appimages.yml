# image will be published to ghcr.io/<user>/<name>
name: gidro-os-appimages
# description will be included in the image's metadata
description: My personalized custom OS image with flatpak removed & replaced with AppImage integration.

# the base image to build on top of (FROM) and the version tag to use
base-image: quay.io/fedora-ostree-desktops/silverblue
image-version: 42 # latest is also supported if you want new updates ASAP

# module configuration, executed in order
# you can include multiple instances of the same module
modules:
  - from-file: general.yml
  # Remove Gnome Software, as it doesn't support AppImage installation
  # Nuke flatpaks & anything related to it, like Fedora 3rd party repos
  - type: dnf
    remove:
      packages:
        - gnome-software
        - flatpak
        - flatpak-libs
        - flatpak-session-helper
        - flatpak-selinux
        - fedora-flathub-remote
        - fedora-third-party
        - fedora-workstation-repositories
  - type: script
    snippets:
      # Nuke flatpak autostart units
      - |
        echo -e "\e[1;31mNuking flatpak autostart units\e[0m"
      - "systemctl --global disable flatpak-gidro@tutamail.service"
      - "systemctl --global disable flatpak-gidro@telegram.service"
      - "systemctl --global disable flatpak-gidro@steam.service"
      - "systemctl --global disable flatpak-gidro@armcord.service"
      - "systemctl --global disable flatpak-gidro@discord.service"
      - "systemctl --global disable flatpak-gidro@deluge.service"
      - "rm -r /usr/lib/systemd/user/flatpak-gidro@*"
      # Nuke flatpak systemd update timers
      - |
        echo -e "\e[1;31mNuking flatpak systemd update timers\e[0m"
      - "systemctl --system disable flatpak-system-update.timer"
      - "systemctl --global disable flatpak-user-update.timer"
      - "rm /usr/lib/systemd/system/flatpak-system-update.timer"
      - "rm /usr/lib/systemd/system/flatpak-system-update.service"
      - "rm /usr/lib/systemd/user/flatpak-user-update.timer"
      - "rm /usr/lib/systemd/user/flatpak-user-update.service"
      # Nuke `default-flatpaks` module
      - |
        echo -e "\e[1;31mNuking 'default-flatpaks' module\e[0m"
      - "systemctl --global disable user-flatpak-setup.timer"
      - "systemctl --system disable system-flatpak-setup.timer"
      - "rm /usr/lib/systemd/system/system-flatpak-setup.timer"
      - "rm /usr/lib/systemd/system/system-flatpak-setup.service"
      - "rm /usr/lib/systemd/user/user-flatpak-setup.timer"
      - "rm /usr/lib/systemd/user/user-flatpak-setup.service"
      - "rm -r /usr/share/bluebuild/default-flatpaks/"
      - "rm -r /etc/bluebuild/default-flatpaks/"
      - "rm /usr/bin/system-flatpak-setup"
      - "rm /usr/bin/user-flatpak-setup"
      # Nuke unrelevant section for flatpaks in yafti
      - |
        echo -e "\e[1;31mNuking unrelevant flatpak section in 'yafti'\e[0m"
      - |
        sed -i '/^  applications:/,/^  configure-gidro-os:/ { /^  configure-gidro-os:/!d }' /usr/share/ublue-os/firstboot/yafti.yml
      - |
        sed -i '/ATTENTION!/d; /Please wait for notification that all flatpaks are installed before proceeding!/d' /usr/share/ublue-os/firstboot/yafti.yml
      - |
        sed -i '0,/description: |/{//!b; n; d;}' /usr/share/ublue-os/firstboot/yafti.yml
      - |
        sed -i 's/        Explore useful apps and options!/        Explore useful options!/g' /usr/share/ublue-os/firstboot/yafti.yml
      # Nuke flatpak related skel
      - |
        echo -e "\e[1;31mNuking flatpak-related skel\e[0m"
      - "rm -r /etc/skel/.var/"
      # Nuke flatpak & fedora-third-party tmpfiles.d entries
      - |
        echo -e "\e[1;31mNuking flatpak & fedora-third-party tmpfiles.d entries\e[0m"
      - |
        sed -i '/\/var\/lib\/flatpak/d; /\/var\/lib\/fedora-third-party/d' /usr/lib/tmpfiles.d/rpm-ostree-autovar.conf
      - "rm /usr/lib/rpm-ostree/tmpfiles.d/flatpak.conf"
      # Install 'am' AppImage manager
      - |
        echo -e "\e[1m\e[38;5;214mInstalling 'am' AppImage manager\e[0m"
      # Latest AM installation
      - "curl -fLs --create-dirs https://github.com/ivan-hc/AM/archive/refs/heads/main.zip -o /tmp/am.zip && mkdir -p /tmp/am && unzip -q /tmp/am.zip -d /tmp/am/ && cp /tmp/am/AM-main/APP-MANAGER /usr/bin/am && chmod +x /usr/bin/am && mkdir -p /usr/lib/am/modules/ && cp /tmp/am/AM-main/modules/* /usr/lib/am/modules/ && chmod +x /usr/lib/am/modules/* && rm -r /tmp/am/ && rm /tmp/am.zip"
      # Versioned AM installation
      #- "VER=$(basename $(curl -Ls -o /dev/null -w %{url_effective} https://github.com/ivan-hc/AM/releases/latest)) && curl -fLs --create-dirs https://github.com/ivan-hc/AM/archive/refs/tags/${VER}.zip -o /tmp/am.zip && mkdir -p /tmp/am && unzip -q /tmp/am.zip -d /tmp/am/ && cp /tmp/am/AM-${VER}/APP-MANAGER /usr/bin/am && chmod +x /usr/bin/am && mkdir -p /usr/lib/am/modules/ && cp /tmp/am/AM-${VER}/modules/* /usr/lib/am/modules/ && chmod +x /usr/lib/am/modules/* && rm -r /tmp/am/ && rm /tmp/am.zip"
  - from-file: shared.yml
